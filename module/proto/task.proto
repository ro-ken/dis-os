syntax = "proto3";

//python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. task.proto

service TaskService{

//  test
  rpc task_test(TaskRequest)returns(CommonReply){}
  rpc task_transfer_file(File)returns(CommonReply){}
  rpc send_image(Image)returns(CommonReply){}
  rpc task_yolox_vedio(stream Image)returns(stream Image){}

//  task
  rpc task_yolox_image(Image)returns(Image){}
  rpc task_lic_detect(Image)returns(Image){}
  rpc task_linear_regression(Null)returns(CommonReply){}
  rpc task_num_detect(Null)returns(CommonReply){}
  rpc task_monet_transfer(Null)returns(CommonReply){}
  rpc task_yolo5(File)returns(Image){}
  rpc task_compose(Image_x2)returns(Image){}
  rpc task_style_transfer(File_x2)returns(Image){}

//  keep_alive
  rpc keep_alive(HeartBeat)returns(CommonReply){}

}

message HeartBeat{
  Address addr = 1;
  Resource res = 2;
}

message File_x2{
  File content=1;
  File style=2;
}

message Image_x2{
  bytes img = 1;
  bytes img_compose = 2;
}



message Null{

}

message Image{
  bytes img = 1;
}

message TaskRequest{
  int32 task_id = 1;
  string task_name = 2;
}

message CommonReply{
  bool success = 1;
}

message File{
  //
  string file_name = 1;
  bytes file_data = 2;
}


message Address{
  string ip = 1;
  int32 port = 2;
}

// 所有硬件资源
message Resource{
  CPU cpu = 1;
  Memory mem = 2;
  Disc disc = 3;
}

message CPU{
  float use_ratio = 1;
  int32 real_num = 2;
  int32 logic_num = 3;
}

message Memory{
  int64 total = 1;
  int64 available = 2;
}

message Disc{
  int64 total = 1;
  int64 available = 2;
}