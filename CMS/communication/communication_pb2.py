# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: communication.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x63ommunication.proto\"N\n\x10TaskRouteRequest\x12\x12\n\nSourceNode\x18\x01 \x01(\x05\x12\x12\n\nTargetNode\x18\x02 \x01(\x05\x12\x12\n\nTaskNumber\x18\x03 \x01(\x05\"2\n\x0eTaskRouteReply\x12\x10\n\x08recepted\x18\x01 \x01(\x08\x12\x0e\n\x06remark\x18\x02 \x01(\t\"b\n\x11ImageRouteRequest\x12\x12\n\nSourceNode\x18\x01 \x01(\x05\x12\x12\n\nTargetNode\x18\x02 \x01(\x05\x12\x12\n\nTaskNumber\x18\x03 \x01(\x05\x12\x11\n\tImageInfo\x18\x04 \x01(\x0c\"G\n\x10ImageRouteReplay\x12\x10\n\x08recepted\x18\x01 \x01(\x08\x12\x0e\n\x06remark\x18\x02 \x01(\t\x12\x11\n\tImageSign\x18\x03 \x01(\x05\"\x8e\x01\n\x15VideoHeadRouteRequest\x12\x12\n\nSourceNode\x18\x01 \x01(\x05\x12\x12\n\nTargetNode\x18\x02 \x01(\x05\x12\x12\n\nTaskNumber\x18\x03 \x01(\x05\x12\x10\n\x08VideoFps\x18\x04 \x01(\x05\x12\x13\n\x0bVideoHeight\x18\x05 \x01(\x05\x12\x12\n\nVideoWidth\x18\x06 \x01(\x05\"8\n\x14VideoHeadRouteReplay\x12\x10\n\x08recepted\x18\x01 \x01(\x08\x12\x0e\n\x06remark\x18\x02 \x01(\t\"g\n\x15VideoDataRouteRequest\x12\x12\n\nSourceNode\x18\x01 \x01(\x05\x12\x12\n\nTargetNode\x18\x02 \x01(\x05\x12\x12\n\nTaskNumber\x18\x03 \x01(\x05\x12\x12\n\nVideoFrame\x18\x04 \x01(\x0c\"8\n\x14VideoDataRouteReplay\x12\x10\n\x08recepted\x18\x01 \x01(\x08\x12\x0e\n\x06remark\x18\x02 \x01(\t2\x81\x02\n\rCommunication\x12\x31\n\tTaskRoute\x12\x11.TaskRouteRequest\x1a\x0f.TaskRouteReply\"\x00\x12\x35\n\nImageRoute\x12\x12.ImageRouteRequest\x1a\x11.ImageRouteReplay\"\x00\x12\x41\n\x0eVideoHeadRoute\x12\x16.VideoHeadRouteRequest\x1a\x15.VideoHeadRouteReplay\"\x00\x12\x43\n\x0eVideoDataRoute\x12\x16.VideoDataRouteRequest\x1a\x15.VideoDataRouteReplay\"\x00(\x01\x62\x06proto3')



_TASKROUTEREQUEST = DESCRIPTOR.message_types_by_name['TaskRouteRequest']
_TASKROUTEREPLY = DESCRIPTOR.message_types_by_name['TaskRouteReply']
_IMAGEROUTEREQUEST = DESCRIPTOR.message_types_by_name['ImageRouteRequest']
_IMAGEROUTEREPLAY = DESCRIPTOR.message_types_by_name['ImageRouteReplay']
_VIDEOHEADROUTEREQUEST = DESCRIPTOR.message_types_by_name['VideoHeadRouteRequest']
_VIDEOHEADROUTEREPLAY = DESCRIPTOR.message_types_by_name['VideoHeadRouteReplay']
_VIDEODATAROUTEREQUEST = DESCRIPTOR.message_types_by_name['VideoDataRouteRequest']
_VIDEODATAROUTEREPLAY = DESCRIPTOR.message_types_by_name['VideoDataRouteReplay']
TaskRouteRequest = _reflection.GeneratedProtocolMessageType('TaskRouteRequest', (_message.Message,), {
  'DESCRIPTOR' : _TASKROUTEREQUEST,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:TaskRouteRequest)
  })
_sym_db.RegisterMessage(TaskRouteRequest)

TaskRouteReply = _reflection.GeneratedProtocolMessageType('TaskRouteReply', (_message.Message,), {
  'DESCRIPTOR' : _TASKROUTEREPLY,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:TaskRouteReply)
  })
_sym_db.RegisterMessage(TaskRouteReply)

ImageRouteRequest = _reflection.GeneratedProtocolMessageType('ImageRouteRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEROUTEREQUEST,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:ImageRouteRequest)
  })
_sym_db.RegisterMessage(ImageRouteRequest)

ImageRouteReplay = _reflection.GeneratedProtocolMessageType('ImageRouteReplay', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEROUTEREPLAY,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:ImageRouteReplay)
  })
_sym_db.RegisterMessage(ImageRouteReplay)

VideoHeadRouteRequest = _reflection.GeneratedProtocolMessageType('VideoHeadRouteRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOHEADROUTEREQUEST,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:VideoHeadRouteRequest)
  })
_sym_db.RegisterMessage(VideoHeadRouteRequest)

VideoHeadRouteReplay = _reflection.GeneratedProtocolMessageType('VideoHeadRouteReplay', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOHEADROUTEREPLAY,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:VideoHeadRouteReplay)
  })
_sym_db.RegisterMessage(VideoHeadRouteReplay)

VideoDataRouteRequest = _reflection.GeneratedProtocolMessageType('VideoDataRouteRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIDEODATAROUTEREQUEST,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:VideoDataRouteRequest)
  })
_sym_db.RegisterMessage(VideoDataRouteRequest)

VideoDataRouteReplay = _reflection.GeneratedProtocolMessageType('VideoDataRouteReplay', (_message.Message,), {
  'DESCRIPTOR' : _VIDEODATAROUTEREPLAY,
  '__module__' : 'communication_pb2'
  # @@protoc_insertion_point(class_scope:VideoDataRouteReplay)
  })
_sym_db.RegisterMessage(VideoDataRouteReplay)

_COMMUNICATION = DESCRIPTOR.services_by_name['Communication']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TASKROUTEREQUEST._serialized_start=23
  _TASKROUTEREQUEST._serialized_end=101
  _TASKROUTEREPLY._serialized_start=103
  _TASKROUTEREPLY._serialized_end=153
  _IMAGEROUTEREQUEST._serialized_start=155
  _IMAGEROUTEREQUEST._serialized_end=253
  _IMAGEROUTEREPLAY._serialized_start=255
  _IMAGEROUTEREPLAY._serialized_end=326
  _VIDEOHEADROUTEREQUEST._serialized_start=329
  _VIDEOHEADROUTEREQUEST._serialized_end=471
  _VIDEOHEADROUTEREPLAY._serialized_start=473
  _VIDEOHEADROUTEREPLAY._serialized_end=529
  _VIDEODATAROUTEREQUEST._serialized_start=531
  _VIDEODATAROUTEREQUEST._serialized_end=634
  _VIDEODATAROUTEREPLAY._serialized_start=636
  _VIDEODATAROUTEREPLAY._serialized_end=692
  _COMMUNICATION._serialized_start=695
  _COMMUNICATION._serialized_end=952
# @@protoc_insertion_point(module_scope)
